version: 2.1
orbs:
   node: circleci/node@1.1.6
   slack: circleci/slack@3.4.2
jobs:
  build-frontend:
    executor:
      name: node/default
    steps:
      - checkout
      - node/with-cache:
          steps:
            - run: cd frontend && npm i && npm run build
  test-frontend:
    executor:
      name: node/default
    steps:
      - checkout
      - node/with-cache:
          steps:
            - run: cd frontend && npm i && npm run test
  build-backend:
    executor:
      name: node/default
    steps:
      - checkout
      - node/with-cache:
          steps:                
            - run: cd backend && npm i && npm run build
  test-backend:
    executor:
      name: node/default
    steps:
      - checkout
      - node/with-cache:
          steps:
            - run: cd backend && npm i && npm run test
  analyze-frontend:
    executor:
      name: node/default
    steps:
      - checkout
      - run: cd frontend && npm audit fix --audit-level=critical --force
  analyze-backend:
    executor:
      name: node/default
    steps:
      - checkout
      - run: cd backend && npm audit fix --audit-level=critical --force
  slack-notify:
    executor:
      name: node/default
    steps:
      - run: exit 0
      - slack/status:
          fail_only: true
          mentions: 'dtosidis'
          only_for_branches: only_for_branches
          webhook: https://app.slack.com/client/T013H39SHNE/
  deploy-backend-infrastructure:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run: yum -y install tar gzip
      - run:
          name: Deploy Backend Infrastructure
          command: |
            aws cloudformation deploy \
              --template-file .circleci/files/backend.yml \
              --stack-name "udapeople-backend-${CIRCLE_WORKFLOW_ID:0:7}" \
              --parameter-overrides ID="${CIRCLE_WORKFLOW_ID:0:7}" \
              --region eu-central-1

        #          channel: https://app.slack.com/client/T013H39SHNE
        #  color: '#42e2f4'
        #  mentions: 'dtosidis'
        #  message: This is a custom message notification
        #  webhook: https://app.slack.com/client/T013H39SHNE/
  configure-infrastructure:
    docker:
      - image: python:3.7-alpine3.11
    steps:
      - add_ssh_keys:
          fingerprints:
            - checkout
            - "2f:56:94:07:a7:c5:7f:4c:67:f7:4e:c4:bd:f4:a5:ff"
      - run:
          name: Install dependencies
          command: |
            apk add --update ansible # install the dependencies needed for your playbook
      - run:
          name: Configure server
          command: |
            ansible-playbook -i .circleci/ansible/url.txt .circleci/ansible/playbook.yml
workflows:
  build-and-test:
    jobs:
      - build-frontend
      - test-frontend:
         requires:
           - build-frontend
      - build-backend
      - test-backend:
         requires:
           - build-backend
      - analyze-frontend:
         requires:
           - test-frontend
      - analyze-backend:
         requires:
           - test-backend
      - slack-notify
      - configure-infrastructure
      - deploy-backend-infrastructure
